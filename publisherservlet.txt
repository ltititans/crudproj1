package com.lti.servlet;

import java.io.IOException;
import java.sql.SQLException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.lti.DAO.AuthorDao;
import com.lti.books.Author;
//publisher_code num
//publisher_id num
//publisher_name
//emil_address
//website


@WebServlet("/")
public class PublisherServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private PublisherDao PublisherDAO;
	
	public void init() {
             publisherDao=new PublisherDao();
		
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String action = request.getServletPath();

		try {
			switch (action) {
			case "/new":
				showNewForm(request, response);
				break;
			case "/insert":
				insertUser(request, response);
				break;
			case "/delete":
				deleteUser(request, response);
				break;
			case "/edit":
				showEditForm(request, response);
				break;
			case "/update":
				updateUser(request, response);
				break;
			default:
				listUser(request, response);
				break;
			}
		} catch (SQLException ex) {
			throw new ServletException(ex);
		}
	}

	private void listUser(HttpServletRequest request, HttpServletResponse response)
			throws SQLException, IOException, ServletException {
		List<Publisher> listUser= publisherDao.selectAllUsers();
		request.setAttribute("listUser", listUser);
		RequestDispatcher dispatcher = request.getRequestDispatcher("publisher-list.jsp");
		dispatcher.forward(request, response);
	}

	private void showNewForm(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		RequestDispatcher dispatcher = request.getRequestDispatcher("publisher-form.jsp");
		dispatcher.forward(request, response);
	}

	private void showEditForm(HttpServletRequest request, HttpServletResponse response)
			throws SQLException, ServletException, IOException {
		int id = Integer.parseInt(request.getParameter("publisher_id"));
		Publisher existingUser = publisherDao.selectUser(id);
		RequestDispatcher dispatcher = request.getRequestDispatcher("publisher-form.jsp");
		request.setAttribute("publisher", existingUser);
		dispatcher.forward(request, response);

	}

	private void insertUser(HttpServletRequest request, HttpServletResponse response) 
			throws SQLException, IOException {
                 Double p_code=Double.ParseDouble(request.getParameter("publisher_code");
                
		String name = request.getParameter("publisher_name");
		String email_address = request.getParameter("email_address");
                String website=request.getParameter("website");
		
		
		
		Publisher newUser = new Publisher(p_Code, name, email_address,website);
		publisherDao.insertUser(newUser);
		response.sendRedirect("list");
	}

	private void updateUser(HttpServletRequest request, HttpServletResponse response) 
			throws SQLException, IOException {
		int publisher_id = Integer.parseInt(request.getParameter("publisher_id"));
		String name = request.getParameter("publisher_name");
		String email_address = request.getParameter("email_address");
                String website=request.getParameter("website");
		
		
		
		Publisher newUser = new Publisher(p_Code, name, email_address,website);
		publisherDao.insertUser(newUser);
		response.sendRedirect("list");
	}

	private void deleteUser(HttpServletRequest request, HttpServletResponse response) 
			throws SQLException, IOException {
               int publisher_id = Integer.parseInt(request.getParameter("publisher_id"));
		publisherDao.deleteUser(publisher_id);
		response.sendRedirect("list");

	}
}
