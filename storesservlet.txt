package com.lti.servlet;

import java.io.IOException;
import java.sql.SQLException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.lti.DAO.StoresDao;
import com.lti.books.Books;

@WebServlet("/")
public class StoresServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private StoresDao storesDAO;
	
	public void init() {
		storesDAO= new StoresDao();
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String action = request.getServletPath();

		try {
			switch (action) {
			case "/new":
				showNewForm(request, response);
				break;
			case "/insert":
				insertUser(request, response);
				break;
			case "/delete":
				deleteUser(request, response);
				break;
			case "/edit":
				showEditForm(request, response);
				break;
			case "/update":
				updateUser(request, response);
				break;
			default:
				listUser(request, response);
				break;
			}
		} catch (SQLException ex) {
			throw new ServletException(ex);
		}
	}

	private void listUser(HttpServletRequest request, HttpServletResponse response)
			throws SQLException, IOException, ServletException {
		List<Stores> listUser = storesDAO.selectAllUsers();
		request.setAttribute("listUser", listUser);
		RequestDispatcher dispatcher = request.getRequestDispatcher("stores-list.jsp");
		dispatcher.forward(request, response);
	}

	private void showNewForm(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		RequestDispatcher dispatcher = request.getRequestDispatcher("stores-form.jsp");
		dispatcher.forward(request, response);
	}

	private void showEditForm(HttpServletRequest request, HttpServletResponse response)
			throws SQLException, ServletException, IOException {
		int id = Integer.parseInt(request.getParameter("stores_id"));
		Stores existingUser = storesDAO.selectUser(id);
		RequestDispatcher dispatcher = request.getRequestDispatcher("stores-form.jsp");
		request.setAttribute("stores", existingUser);
		dispatcher.forward(request, response);

	}

	private void insertUser(HttpServletRequest request, HttpServletResponse response) 
			throws SQLException, IOException {
		String add = request.getParameter("address");
                String city=request.getParameter("city");
                String state=request.getParameter("state");
               String zipcode=request.getParameter("zipcode");
		//int a_id =Integer.parseInt( request.getParameter("author_id"));
		//int publisher_id =Integer.parseInt( request.getParameter("publisher_id"));
		
		
		
		stores newUser = new Stores(add, city, satte,zipcode);
		storesDAO.insertUser(newUser);
		response.sendRedirect("list");
	}

	private void updateUser(HttpServletRequest request, HttpServletResponse response) 
			throws SQLException, IOException {
                int id=Integer.ParseInt(request.getParameter("stores_id");
		String add = request.getParameter("address");
                String city=request.getParameter("city");
                String state=request.getParameter("state");
               String zipcode=request.getParameter("zipcode")

		stores newUser = new Stores(id,add, city, satte,zipcode);
		bookDAO.updateUser(b);
		response.sendRedirect("list");
	}

	private void deleteUser(HttpServletRequest request, HttpServletResponse response) 
			throws SQLException, IOException {
		  int id=Integer.ParseInt(request.getParameter("stores_id");
		storesDAO.storesUser(id);
		response.sendRedirect("list");

	}

}